THREE.MirrorShader={uniforms:{tDiffuse:{type:"t",value:null},side:{type:"i",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform int side;\nvarying vec2 vUv;\nvoid main() {\nvec2 p = vUv;\nif (side == 0){\nif (p.x > 0.5) p.x = 1.0 - p.x;\n}else if (side == 1){\nif (p.x < 0.5) p.x = 1.0 - p.x;\n}else if (side == 2){\nif (p.y < 0.5) p.y = 1.0 - p.y;\n}else if (side == 3){\nif (p.y > 0.5) p.y = 1.0 - p.y;\n} \nvec4 color = texture2D(tDiffuse, p);\ngl_FragColor = color;\n}"};